# -*- coding: utf-8 -*-
"""Лабораторная работа №1.ipynb
1. Файл minutes_n_ingredients.csv содержит информацию об идентификаторе рецепта, времени его выполнения в минутах и количестве необходимых ингредиентов. Считайте данные из этого файла в виде массива numpy типа int32, используя np.loadtxt. Выведите на экран первые 5 строк массива.
"""

import numpy as np

a = np.loadtxt('/content/drive/MyDrive/minutes_n_ingredients.csv',dtype='int32', delimiter=',', skiprows=1)
print(a[0:5])

"""2. Вычислите среднее значение, минимум, максимум и медиану по каждому из столбцов, кроме первого."""

column_1 = a[:,0]
column_2 = a[:,1]
column_3 = a[:,2]

avg_column_2 = np.average(column_2)
min_column_2 = np.min(column_2)
max_column_2 = np.max(column_2)
median_column_2 = np.median(column_2)
print('Среднее значение второго столбца = ', avg_column_2, '\nМинимум второго столбца =', min_column_2, '\nМаксимум второго столбца = ', max_column_2, '\nМедиана второго столбца = ', median_column_2)
avg_column_2, min_column_2, max_column_2, median_column_2

avg_column_3 = np.average(column_3)
min_column_3 = np.min(column_3)
max_column_3 = np.max(column_3)
median_column_3 = np.median(column_3)
print('Среднее значение третьего столбца = ', avg_column_3, '\nМинимум третьего столбца =', min_column_3, '\nМаксимум третьего столбца = ', max_column_3, '\nМедиана третьего столбца = ', median_column_3)

"""3. Ограничьте сверху значения продолжительности выполнения рецепта значением квантиля
.
"""

#1 вариант
q = np.quantile(column_2, 0.75)
a[:,1] = np.clip(column_2, 0, int(q))
column_2

#2 вариант
q = np.quantile(a[:,1], .75)
a[:,1] = np.clip(a[:,1], 0, q)
print(a)

"""4. Посчитайте, для скольких рецептов указана продолжительность, равная нулю. Замените для таких строк значение в данном столбце на 1."""

print(np.sum(a[:,1]==0))
a[:,1][a[:,1]==0] = 1

"""5. Посчитайте, сколько уникальных рецептов находится в датасете."""

unique = np.unique(a, axis=1)
len(unique)

"""6. Сколько и каких различных значений кол-ва ингредиентов присутвует в рецептах из датасета?"""

lst = list(column_3.copy())
unique = list(set(lst))
frequency = {}
for item in unique:
    frequency[item] = lst.count(item)
print("Всего различных значений количества ингридиентов в рецептах датасета = ", len(unique),"\nСколько раз встречаются различные значения количества ингридиентов = ", frequency)

"""7. Создайте версию массива, содержащую информацию только о рецептах, состоящих не более чем из 5 ингредиентов."""

ne_bolshe_5 = a[a[:,2] <= 5]
ne_bolshe_5

"""8. Для каждого рецепта посчитайте, сколько в среднем ингредиентов приходится на одну минуту рецепта. Найдите максимальное значение этой величины для всего датасета"""

ratio = []
for k in range(1, len(a)):
    ratio.append(column_3[k]/column_2[k])
print('Максимальное значение всего датасета = ',max(ratio),'\nСреднее количество ингредиентов на одну минуту для каждого рецепта:',*ratio, sep="\n", end="\n\n")

"""9. Вычислите среднее количество ингредиентов для топ-100 рецептов с наибольшей продолжительностью"""

top_100 = a.copy()
top_100 = top_100[top_100[:, 1].argsort()[::-1]][:100]
average_100 = np.average(top_100[:,2])
average_100

"""10. Выберите случайным образом и выведите информацию о 10 различных рецептах"""

print(' ID     TIMING  INGREDIENTS')
for m in range(1,11):
    index = np.where(a[:,0] == np.random.choice(column_1))
    print(a[index])

"""11. Выведите процент рецептов, кол-во ингредиентов в которых меньше среднего."""

l = 0
for i in range(1,len(a)):
    if column_3[i]<avg_column_3:
        l+=1
print((l/len(a))*100,'%', sep='')

"""12. Назовем "простым" такой рецепт, длительность выполнения которого не больше 20 минут и кол-во ингредиентов в котором не больше 5. Создайте версию датасета с дополнительным столбцом, значениями которого являются 1, если рецепт простой, и 0 в противном случае."""

k=0
c = []
simple = a.copy()
for m in range(0, len(a)):
    if simple[m,1] <= 20 and simple[m,2] <=5:
        c.append(1)
        k+=1
    else:
        c.append(0)
simple = np.column_stack((simple,c))
simple

"""13. Выведите процент "простых" рецептов в датасете"""

print(k/len(a)*100,'%', sep='')

"""14. Разделим рецепты на группы по следующему правилу. Назовем рецепты короткими, если их продолжительность составляет менее 10 минут; стандартными, если их продолжительность составляет более 10, но менее 20 минут; и длинными, если их продолжительность составляет не менее 20 минут. Создайте трехмерный массив, где нулевая ось отвечает за номер группы (короткий, стандартный или длинный рецепт), первая ось - за сам рецепт и вторая ось - за характеристики рецепта. Выберите максимальное количество рецептов из каждой группы таким образом, чтобы было возможно сформировать трехмерный массив. Выведите форму полученного массива."""

short = []
standart = []
long = []
for i in range(0, len(a)):
    if a[i,1] < 10:
        short.append(a[i])
    elif a[i,1] >= 10 and a[i,1] < 20:
        standart.append(a[i])
    elif a[i,1] >= 20:
        long.append(a[i])
m = min(len(short), len(standart), len(long))

standart = standart[:m]
short = short[:m]
long = long[:m]

d3 = np.stack((short,standart,long), axis=0)
d3[2,2,0], long[:5],d3.shape
